<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.11 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC7540 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7540.xml">
<!ENTITY RFC8288 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml">
<!ENTITY I-D.ietf-httpbis-header-structure SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-httpbis-header-structure.xml">
<!ENTITY W3C.CR-preload-20171026 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.CR-preload-20171026.xml">
<!ENTITY RFC4287 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4287.xml">
]>


<rfc docName="draft-pot-prefer-push-01" category="std">

  <front>
    <title>HTTP-client suggested Push Preference</title>

    <author initials="E." surname="Pot" fullname="Evert Pot">
      <organization></organization>
      <address>
        <email>me@evertpot.com</email>
        <uri>https://evertpot.com/</uri>
      </address>
    </author>

    <date year="2018" month="December" day="02"/>

    
    
    

    <abstract>


<t><spanx style="verb">Prefer-Push</spanx> is a HTTP header that a client may use to request that a
server uses HTTP/2 Push to send related resources as identified by their
link relationships.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP/2 <xref target="RFC7540"/> allows a server to push request and response pairs to
HTTP clients. This can save round-trips between server and client and
reduces the total time required for a client to retrieve all requested
resources.</t>

<t>This mechanism is completely controlled by the server, and it is up to
implementors of services to anticipate what resources a client might need
next.</t>

<t>This specification defines a new HTTP header that allows a client to inform a
server of resources they will require next based on a link relation type
<xref target="RFC8288"/>.</t>

</section>
<section anchor="rationale" title="Rationale">

<t>Many HTTP-based services provide some mechanism to embed the HTTP response
bodies of resources into other HTTP resource. A common example of this is when
a resource is structured as a “collection of resources”. Examples of this
include:</t>

<t><list style="symbols">
  <t>The Atom Syndication Format <xref target="RFC4287"/> that encodes <spanx style="verb">ATOM:entry</spanx> XML
elements for each subordinate.</t>
  <t>The <xref target="HAL"></xref> format, which provides an <spanx style="verb">_embedded</spanx> element to embedding bodies
of resources in other resources.</t>
  <t>The <xref target="JSON-API"></xref> format, which provides a <spanx style="verb">included</spanx> property to embed
resources.</t>
</list></t>

<t>Embedding resource responses in other resources has two major peformance
advantages:</t>

<t><list style="numbers">
  <t>It reduces the number of roundtrips. A client can make a single HTTP request
and get many responses.</t>
  <t>Generating a related set of resources can often be implemented on a server
to be less time consuming than generating each response individually.</t>
</list></t>

<t>These mechanisms also pose an issue. To HTTP clients and intermediaries such
as proxies and caches resources are opaque. They are not aware of a concept
of embedded resources.</t>

<t>One example where this might fail is if a client recieves a resource, embedded
in another resource, a cache might not be aware of this resource and serve a
stale, older version when this resource is requesed directly.</t>

<t>To keep the performance advantage of being able to generate a related set of
HTTP responses together, HTTP/2 Push could be an alternative to embedding.</t>

<t>HTTP/2 Push allows the server to initiate a request and response pair and send
them to the client early if the server thinks it will need them. Another
advantage of HTTP/2 push over embedding is that it allows resources of mixed
mediatypes to be pushed.</t>

<t>Servers can however not always anticipate which resources a client might want
pushed. To avoid guessing, this specification introduces a <spanx style="verb">Prefer-Push</spanx>
header that allows a client to inform a server which resources they will
need next.</t>

<t>In many REST apis, sub-ordiniate or embedded resources are identified by their
link relation. By using the link relation, it will be possible for a client
to indicate to a server which links they intent to follow, allowing a server
to only push the resources that the client knows it will need.</t>

</section>
<section anchor="the-header-format" title="The header format">

<t>This format should the “List” Data Type from the Structured Headers
specification <xref target="I-D.ietf-httpbis-header-structure"/>.</t>

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer-Push: item, author, "https://example.org/custom-rel"
]]></artwork></figure>

<t>Each item in the list is a link relationship, as described in Web Links
<xref target="RFC8288"/>.</t>

</section>
<section anchor="handling-a-prefer-push-request" title="Handling a Prefer-Push request">

<t>When a server receives the <spanx style="verb">Prefer-Push</spanx> header, it can choose to push the
related resources. It’s up to the discretion of the implementor to decide
which resources to push. A server is also free to ignore push-requests.</t>

<t>If a server chooses to act on an item in the <spanx style="verb">Prefer-Push</spanx> list, the Link
Relationship should exist at the target resource. This specification does
not require that the link relationships get returned as HTTP <spanx style="verb">Link</spanx> headers.
The <spanx style="verb">Link</spanx> may be defined as <spanx style="verb">&lt;link&gt;</spanx> HTML element, or as a JSON property.
How the link is serialized is dependent on the media type.</t>

</section>
<section anchor="using-with-preload-relationship-types" title="Using with “preload” relationship types">

<t><xref target="W3C.CR-preload-20171026"/> defines a <spanx style="verb">preload</spanx> relationship type. This
relationship type can be used by an origin to inform a client or intermediate
to start fetching a resource, or a proxy to initiate a HTTP/2 push.</t>

<t>A distinct difference between <spanx style="verb">preload</spanx> and <spanx style="verb">Prefer-Push</spanx> is that <spanx style="verb">preload</spanx>
can be used by origin servers to inform clients and intermediates to fetch
and potentially push resources optimistically, but fundamentally <spanx style="verb">Prefer-Push</spanx>
is a completely client-driven mechanism.</t>

<t>These features can co-exist, but a wide adoption of client-driven suggestions
for pushes might eventually make <spanx style="verb">preload</spanx> unnecceary as in most cases clients
will have a better knowledge of the resources they need.</t>

</section>
<section anchor="security-considerations" title="Security considerations">

<t>The Prefer-Push mechanism can potentially result in a large number of
resources being pushed. This can result in a Denial-of-Service attack.</t>

<t>A server must set reasonable restrictions around the number of pushed
resources.</t>

</section>
<section anchor="iana-considerations" title="IANA considerations">

<t>This document defines the <spanx style="verb">Prefer-Push</spanx> HTTP request fields and registers
them in the Permanent Message Header Fields registry.</t>

<section anchor="prefer-push" title="Prefer-Push">
<t><list style="symbols">
  <t>Header field name: Prefer-Push</t>
  <t>Applicable protocol: HTTP</t>
  <t>Status: standard</t>
  <t>Author/Change controller: IETF</t>
  <t>Specification document(s): <xref target="prefer-push"/> of this document</t>
  <t>Related information: for Client Hints</t>
</list></t>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC7540;
&RFC8288;
&I-D.ietf-httpbis-header-structure;
&W3C.CR-preload-20171026;


    </references>

    <references title='Informative References'>

&RFC4287;
<reference anchor="HAL" target="https://tools.ietf.org/html/draft-kelly-json-hal-00">
  <front>
    <title>JSON Hypertext Application Language</title>
    <author initials="M." surname="Kelly" fullname="Mike Kelly">
      <organization></organization>
    </author>
    <date year="2012" month="June" day="07"/>
  </front>
</reference>
<reference anchor="JSON-API" target="https://jsonapi.org/format/">
  <front>
    <title>JSON:API</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t>A server serves a document with a JSON-based media-type. The following example
document might represent a list of articles:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/vnd.example.links+json

{
   "links": [
      { "rel": "item", "href": "/article/1" },
      { "rel": "item", "href": "/article/2" },
      { "rel": "item", "href": "/article/3" },
      { "rel": "item", "href": "/article/4" },
      { "rel": "item", "href": "/article/5" }
   ]
   "total" : 5,
}
]]></artwork></figure>

<t>A “Prefer-Push”-enabled client knows it will want to receive the full
representations of all articles. When the client receives the list of
articles via a “GET” request, it can indicate this preference with
the “Prefer-Push” header:</t>

<figure><artwork><![CDATA[
GET /article HTTP/1.1
Accept: application/vnd.example.links+json
Prefer-Push: item
]]></artwork></figure>

<t>Upon recieving this request, server may immediately generate the request
and response pairs for every “item” link in the collection and initiate
push streams for each.</t>

</section>
<section anchor="changelog" title="Changelog">

<section anchor="changes-since-00" title="Changes since -00">

<t><list style="symbols">
  <t>Added an abstract</t>
  <t>Updated rationale section significantly.</t>
</list></t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

