<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC7540 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7540.xml">
<!ENTITY RFC8288 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml">
<!ENTITY I-D.ietf-httpbis-header-structure SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-httpbis-header-structure.xml">
<!ENTITY W3C.CR-preload-20171026 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.CR-preload-20171026.xml">
<!ENTITY RFC4287 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4287.xml">
]>


<rfc docName="draft-pot-prefer-push-00" category="std">

  <front>
    <title>HTTP-client suggested Push Preference</title>

    <author initials="E." surname="Pot" fullname="Evert Pot">
      <organization></organization>
      <address>
        <email>me@evertpot.com</email>
        <uri>https://evertpot.com/</uri>
      </address>
    </author>

    <date year="2018" month="December" day="02"/>

    
    
    

    <abstract>


<t>TODO</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP/2 <xref target="RFC7540"/> allows a server to push request and response pairs to
HTTP clients. This can save round-trips between server and client and
reduces the total time required for a client to retrieve all requested
resources.</t>

<t>This mechanism is completely controlled by the server, and it is up to
implementors of services to anticipate what resources a client might need
next.</t>

<t>This specification defines a new HTTP header that allows a client to inform a
server of resources they will require next based on a link relation type
<xref target="RFC8288"/>.</t>

</section>
<section anchor="rationale" title="Rationale">

<t>Many HTTP-based services provide some mechanism to embed the HTTP response
bodies of resources into other HTTP resource. A common example of this is when
a resource is structured as a “collection of resources”. Examples of this
include:</t>

<t><list style="symbols">
  <t>The Atom Syndication Format <xref target="RFC4287"/> that encodes <spanx style="verb">ATOM:entry</spanx> XML
elements for each subordinate.</t>
  <t>The <xref target="HAL"></xref> format, which provides an <spanx style="verb">_embedded</spanx> element to embedding bodies
of resources in other resources.</t>
  <t>The <xref target="JSON-API"></xref> format, which provides a <spanx style="verb">included</spanx> property to embed
resources.</t>
</list></t>

<t>Embedding resource responses in other resources has two major peformance
advantages:</t>

<t><list style="numbers">
  <t>It reduces the number of roundtrips. A client can make a single HTTP request
and get many responses.</t>
  <t>Generating a related set of resources can often be implemented on a server
to be less time consuming that generating each response individually.</t>
</list></t>

<t>These mechanism also poses an issue. HTTP clients and intermediaries are not
aware of these embedded resources, because there was never a true HTTP request.</t>

<t>By leveraging HTTP/2 push instead of format-specific embedding mechanisms,
it’s possible for services to push subordinate resources as soon as possible,
generate HTTP responses as a “set” all while still taking advantage of existing
HTTP infrastructure. Another advantage of HTTP/2 push over embedding it that
it allows resources of mixed mediatypes to be pushed.</t>

<t>In many REST apis, sub-ordiniate or embedded resources are identified by their
link relation. By using the link relation, it will be possible for a client
to indicate to a server which links they intent to follow, allowing a server
to only push the resources that the client knows it will need.</t>

</section>
<section anchor="the-header-format" title="The header format">

<t>This format should uses the “List” format from the Structured Headers format
<xref target="I-D.ietf-httpbis-header-structure"/>.</t>

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer-Push: item, author, "https://example.org/custom-rel"
]]></artwork></figure>

</section>
<section anchor="handling-a-prefer-push-request" title="Handling a Prefer-Push request">

<t>When a server receives the <spanx style="verb">Prefer-Push</spanx> header, it can choose to push the
related resources. It’s up to the discretion of the implementor to decide
which resources to push. A server is also free to ignore push-requests.</t>

<t><xref target="RFC8288"/> defines Web Links as an abstract concept that can be specified
in a variety of ways. It defines the HTTP “Link” header as a specific
serialization. Like <xref target="RFC8288"/>, this specification is not dependent on the
serialization of the Web Link.</t>

</section>
<section anchor="using-with-preload-relationship-types" title="Using with “preload” relationship types">

<t><xref target="W3C.CR-preload-20171026"/> defines a <spanx style="verb">preload</spanx> relationship type. This
relationship type can be used by an origin to inform a client or intermediate
to start fetching a resource, or a proxy to initiate a HTTP/2 push.</t>

<t>A distinct difference between <spanx style="verb">preload</spanx> and <spanx style="verb">Prefer-Push</spanx> is that <spanx style="verb">preload</spanx>
can be used by origin servers to inform clients and intermediates to fetch
and potentially push resources optimistically, but fundamentally <spanx style="verb">Prefer-Push</spanx>
is a completely client-driven mechanism.</t>

<t>As such, these features can co-exist.</t>

</section>
<section anchor="security-considerations" title="Security considerations">

<t>The Prefer-Push mechanism can potentially result in a large number of
resources being pushed. This can result in a Denial-of-Service attack.</t>

<t>A server must set reasonable restrictions around the amount of pushes it
sends. In the case of N-Depth pushes, servers SHOULD also set restrictions
around the depth it supports.</t>

</section>
<section anchor="iana-considerations" title="IANA considerations">

<t>This document defines the <spanx style="verb">Prefer-Push</spanx> HTTP request fields and registers
them in the Permanent Message Header Fields registry.</t>

<section anchor="prefer-push" title="Prefer-Push">
<t><list style="symbols">
  <t>Header field name: Prefer-Push</t>
  <t>Applicable protocol: HTTP</t>
  <t>Status: standard</t>
  <t>Author/Change controller: IETF</t>
  <t>Specification document(s): <xref target="prefer-push"/> of this document</t>
  <t>Related information: for Client Hints</t>
</list></t>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC7540;
&RFC8288;
&I-D.ietf-httpbis-header-structure;
&W3C.CR-preload-20171026;


    </references>

    <references title='Informative References'>

&RFC4287;
<reference anchor="HAL" target="https://tools.ietf.org/html/draft-kelly-json-hal-00">
  <front>
    <title>JSON Hypertext Application Language</title>
    <author initials="M." surname="Kelly" fullname="Mike Kelly">
      <organization></organization>
    </author>
    <date year="2012" month="June" day="07"/>
  </front>
</reference>
<reference anchor="JSON-API" target="https://jsonapi.org/format/">
  <front>
    <title>JSON:API</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t>A server serves a document with a JSON-based media-type. The following example
document might represent a list of articles:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/vnd.example.links+json

{
   "links": [
      { "rel": "item", "href": "/article/1" },
      { "rel": "item", "href": "/article/2" },
      { "rel": "item", "href": "/article/3" },
      { "rel": "item", "href": "/article/4" },
      { "rel": "item", "href": "/article/5" }
   ]
   "total" : 5,
}
]]></artwork></figure>

<t>A “Prefer-Push”-enabled client knows it will want to receive the full
representations of all articles. When the client receives the list of
articles via a “GET” request, it can indicate this preference with
the “Prefer-Push” header:</t>

<figure><artwork><![CDATA[
GET /article HTTP/1.1
Accept: application/vnd.example.links+json
Prefer-Push: item
]]></artwork></figure>

<t>Upon recieving this request, server may immediately generate the request
and response pairs for every “item” link in the collection and initiate
push streams for each.</t>

</section>


  </back>

<!-- ##markdown-source:
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
GBkfchcAAA==

-->

</rfc>

