<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC7540 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7540.xml">
<!ENTITY RFC8288 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml">
<!ENTITY I-D.ietf-httpbis-header-structure SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-httpbis-header-structure.xml">
<!ENTITY W3C.CR-preload-20171026 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.CR-preload-20171026.xml">
<!ENTITY RFC4287 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4287.xml">
]>


<rfc docName="draft-pot-prefer-push-00" category="std">

  <front>
    <title>HTTP-client suggested Push Preference</title>

    <author initials="." surname="Evert Pot">
      <organization></organization>
      <address>
        <email>me@evertpot.com</email>
        <uri>https://evertpot.com/</uri>
      </address>
    </author>

    <date year="2018" month="December" day="02"/>

    
    
    

    <abstract>


<t>TODO</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP/2 <xref target="RFC7540"/> allows a server to push request and response pairs to
HTTP clients. This can save round-trips between server and client and
reduces the total time required for a client to retrieve all requested
resources.</t>

<t>This mechanism is completely controlled by the server, and it is up to
implementors of services to anticipate what resources a client might need
next.</t>

<t>This specification defines a new HTTP header that allows a client to inform a
server of resources they will require next based on a link relation type
<xref target="RFC8288"/>.</t>

</section>
<section anchor="rationale" title="Rationale">

<t>Many HTTP-based services provide some mechanism to embed the HTTP response
bodies of resources into other HTTP resource. A common example of this is when
a resource is structured as a “collection of resources”. Examples of this
include:</t>

<t><list style="symbols">
  <t>The Atom Syndication Format <xref target="RFC4287"/> that encodes <spanx style="verb">ATOM:entry</spanx> XML
elements for each subordinate.</t>
  <t>The <xref target="HAL"></xref> format, which provides an <spanx style="verb">_embedded</spanx> element to embedding bodies
of resources in other resources.</t>
  <t>The <xref target="JSON-API"></xref> format, which provides a <spanx style="verb">included</spanx> property to embed
resources.</t>
</list></t>

<t>Embedding resource responses in other resources has two major peformance
advantages:</t>

<t><list style="numbers">
  <t>It reduces the number of roundtrips. A client can make a single HTTP request
and get many responses.</t>
  <t>Generating a related set of resources can often be implemented on a server
to be less time consuming that generating each response individually.</t>
</list></t>

<t>These mechanism also poses an issue. HTTP clients and intermediaries are not
aware of these embedded resources, because there was never a true HTTP request.</t>

<t>By leveraging HTTP/2 push instead of format-specific embedding mechanisms,
it’s possible for services to push subordinate resources as soon as possible,
generate HTTP responses as a “set” all while still taking advantage of existing
HTTP infrastructure. Another advantage of HTTP/2 push over embedding it that
it allows resources of mixed mediatypes to be pushed.</t>

<t>In many REST apis, sub-ordiniate or embedded resources are identified by their
link relation. By using the link relation, it will be possible for a client
to indicate to a server which links they intent to follow, allowing a server
to only push the resources that the client knows it will need.</t>

</section>
<section anchor="the-header-format" title="The header format">

<t>This format should uses the “List” format from the Structured Headers format
<xref target="I-D.ietf-httpbis-header-structure"/>.</t>

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer-Push: item, author, "https://example.org/custom-rel"
]]></artwork></figure>

</section>
<section anchor="handling-a-prefer-push-request" title="Handling a Prefer-Push request">

<t>When a server receives the <spanx style="verb">Prefer-Push</spanx> header, it can choose to push the
related resources. It’s up to the discretion of the implementor to decide
which resources to push. A server is also free to ignore push-requests.</t>

<t><xref target="RFC8288"/> defines Web Links as an abstract concept that can be specified
in a variety of ways. It defines the HTTP “Link” header as a specific
serialization. Like <xref target="RFC8288"/>, this specification is not dependent on the
serialization of the Web Link.</t>

</section>
<section anchor="using-with-preload-relationship-types" title="Using with “preload” relationship types">

<t><xref target="W3C.CR-preload-20171026"/> defines a <spanx style="verb">preload</spanx> relationship type. This
relationship type can be used by an origin to inform a client or intermediate
to start fetching a resource, or a proxy to initiate a HTTP/2 push.</t>

<t>A distinct difference between <spanx style="verb">preload</spanx> and <spanx style="verb">Prefer-Push</spanx> is that <spanx style="verb">preload</spanx>
can be used by origin servers to inform clients and intermediates to fetch
and potentially push resources optimistically, but fundamentally <spanx style="verb">Prefer-Push</spanx>
is a completely client-driven mechanism.</t>

<t>As such, these features can co-exist.</t>

</section>
<section anchor="security-considerations" title="Security considerations">

<t>The Prefer-Push mechanism can potentially result in a large number of
resources being pushed. This can result in a Denial-of-Service attack.</t>

<t>A server must set reasonable restrictions around the amount of pushes it
sends. In the case of N-Depth pushes, servers SHOULD also set restrictions
around the depth it supports.</t>

</section>
<section anchor="iana-considerations" title="IANA considerations">

<t>This document defines the <spanx style="verb">Prefer-Push</spanx> HTTP request fields and registers
them in the Permanent Message Header Fields registry.</t>

<section anchor="prefer-push" title="Prefer-Push">
<t><list style="symbols">
  <t>Header field name: Prefer-Push</t>
  <t>Applicable protocol: HTTP</t>
  <t>Status: standard</t>
  <t>Author/Change controller: IETF</t>
  <t>Specification document(s): <xref target="prefer-push"/> of this document</t>
  <t>Related information: for Client Hints</t>
</list></t>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC7540;
&RFC8288;
&I-D.ietf-httpbis-header-structure;
&W3C.CR-preload-20171026;


    </references>

    <references title='Informative References'>

&RFC4287;
<reference anchor="HAL" target="https://tools.ietf.org/html/draft-kelly-json-hal-00">
  <front>
    <title>JSON Hypertext Application Language</title>
    <author initials="M." surname="Kelly" fullname="Mike Kelly">
      <organization></organization>
    </author>
    <date year="2012" month="June" day="07"/>
  </front>
</reference>
<reference anchor="JSON-API" target="https://jsonapi.org/format/">
  <front>
    <title>JSON:API</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t>A server serves a document with a JSON-based media-type. The following example
document might represent a list of articles:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/vnd.example.links+json

{
   "links": [
      { "rel": "item", "href": "/article/1" },
      { "rel": "item", "href": "/article/2" },
      { "rel": "item", "href": "/article/3" },
      { "rel": "item", "href": "/article/4" },
      { "rel": "item", "href": "/article/5" }
   ]
   "total" : 5,
}
]]></artwork></figure>

<t>A “Prefer-Push”-enabled client knows it will want to receive the full
representations of all articles. When the client receives the list of
articles via a “GET” request, it can indicate this preference with
the “Prefer-Push” header:</t>

<figure><artwork><![CDATA[
GET /article HTTP/1.1
Accept: application/vnd.example.links+json
Prefer-Push: item
]]></artwork></figure>

<t>Upon recieving this request, server may immediately generate the request
and response pairs for every “item” link in the collection and initiate
push streams for each.</t>

</section>


  </back>

<!-- ##markdown-source:
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
FwAA

-->

</rfc>

