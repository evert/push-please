<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.11 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC7540 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7540.xml">
<!ENTITY RFC8288 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml">
<!ENTITY I-D.ietf-httpbis-header-structure SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-httpbis-header-structure.xml">
<!ENTITY W3C.CR-preload-20171026 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.CR-preload-20171026.xml">
<!ENTITY RFC4287 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4287.xml">
]>


<rfc docName="draft-pot-prefer-push-01" category="std">

  <front>
    <title>HTTP-client suggested Push Preference</title>

    <author initials="E." surname="Pot" fullname="Evert Pot">
      <organization></organization>
      <address>
        <email>me@evertpot.com</email>
        <uri>https://evertpot.com/</uri>
      </address>
    </author>

    <date year="2019" month="May" day="02"/>

    
    
    

    <abstract>


<t><spanx style="verb">Prefer-Push</spanx> is a HTTP header that a client may use to request that a
server uses HTTP/2 Push to send related resources as identified by their
link relationships.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP/2 <xref target="RFC7540"/> allows a server to push request and response pairs to
HTTP clients. This can save round-trips between server and client and
reduces the total time required for a client to retrieve all requested
resources.</t>

<t>This mechanism is completely controlled by the server, and it is up to
implementors of services to anticipate what resources a client might need
next.</t>

<t>This specification defines a new HTTP header that allows a client to inform a
server of resources they will require next based on a link relation type
<xref target="RFC8288"/>.</t>

</section>
<section anchor="rationale" title="Rationale">

<t>Many HTTP-based services provide some mechanism to embed the HTTP response
bodies of resources into other HTTP resource. A common example of this is when
a resource is structured as a “collection of resources”. Examples of this
include:</t>

<t><list style="symbols">
  <t>The Atom Syndication Format <xref target="RFC4287"/> that encodes <spanx style="verb">ATOM:entry</spanx> XML
elements for each subordinate.</t>
  <t>The <xref target="HAL"></xref> format, which provides an <spanx style="verb">_embedded</spanx> element to embedding bodies
of resources in other resources.</t>
  <t>The <xref target="JSON-API"></xref> format, which provides a <spanx style="verb">included</spanx> property to embed
resources.</t>
</list></t>

<t>Embedding resource responses in other resources has two major peformance
advantages:</t>

<t><list style="numbers">
  <t>It reduces the number of roundtrips. A client can make a single HTTP request
and get many responses.</t>
  <t>Generating a related set of resources can often be implemented on a server
to be less time consuming than generating each response individually.</t>
</list></t>

<t>These mechanisms also pose an issue. To HTTP clients and intermediaries such
as proxies and caches resources are opaque. They are not aware of a concept
of embedded resources.</t>

<t>One example where this might fail is if a client recieves a resource, embedded
in another resource, a cache might not be aware of this resource and serve a
stale, older version when this resource is requesed directly.</t>

<t>To keep the performance advantage of being able to generate a related set of
HTTP responses together, HTTP/2 Push could be an alternative to embedding.</t>

<t>HTTP/2 Push allows the server to initiate a request and response pair and send
them to the client early if the server thinks it will need them. Another
advantage of HTTP/2 push over embedding is that it allows resources of mixed
mediatypes to be pushed.</t>

<t>Servers can however not always anticipate which resources a client might want
pushed. To avoid guessing, this specification introduces a <spanx style="verb">Prefer-Push</spanx>
header that allows a client to inform a server which resources they will
need next.</t>

<t>In many REST apis, sub-ordiniate or embedded resources are identified by their
link relation. By using the link relation, it will be possible for a client
to indicate to a server which links they intent to follow, allowing a server
to only push the resources that the client knows it will need.</t>

</section>
<section anchor="the-header-format" title="The header format">

<t>This format should the “List” Data Type from the Structured Headers
specification <xref target="I-D.ietf-httpbis-header-structure"/>.</t>

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer-Push: item, author, "https://example.org/custom-rel"
]]></artwork></figure>

<t>Each item in the list is a link relationship, as described in Web Links
<xref target="RFC8288"/>.</t>

</section>
<section anchor="handling-a-prefer-push-request" title="Handling a Prefer-Push request">

<t>When a server receives the <spanx style="verb">Prefer-Push</spanx> header, it can choose to push the
related resources. It’s up to the discretion of the implementor to decide
which resources to push. A server is also free to ignore push-requests.</t>

<t>If a server chooses to act on an item in the <spanx style="verb">Prefer-Push</spanx> list, the Link
Relationship should exist at the target resource. This specification does
not require that the link relationships get returned as HTTP <spanx style="verb">Link</spanx> headers.
The <spanx style="verb">Link</spanx> may be defined as <spanx style="verb">&lt;link&gt;</spanx> HTML element, or as a JSON property.
How the link is serialized is dependent on the media type.</t>

</section>
<section anchor="using-with-preload-relationship-types" title="Using with “preload” relationship types">

<t><xref target="W3C.CR-preload-20171026"/> defines a <spanx style="verb">preload</spanx> relationship type. This
relationship type can be used by an origin to inform a client or intermediate
to start fetching a resource, or a proxy to initiate a HTTP/2 push.</t>

<t>A distinct difference between <spanx style="verb">preload</spanx> and <spanx style="verb">Prefer-Push</spanx> is that <spanx style="verb">preload</spanx>
can be used by origin servers to inform clients and intermediates to fetch
and potentially push resources optimistically, but fundamentally <spanx style="verb">Prefer-Push</spanx>
is a completely client-driven mechanism.</t>

<t>These features can co-exist, but a wide adoption of client-driven suggestions
for pushes might eventually make <spanx style="verb">preload</spanx> unnecceary as in most cases clients
will have a better knowledge of the resources they need.</t>

</section>
<section anchor="security-considerations" title="Security considerations">

<t>The Prefer-Push mechanism can potentially result in a large number of
resources being pushed. This can result in a Denial-of-Service attack.</t>

<t>A server must set reasonable restrictions around the number of pushed
resources.</t>

</section>
<section anchor="iana-considerations" title="IANA considerations">

<t>This document defines the <spanx style="verb">Prefer-Push</spanx> HTTP request fields and registers
them in the Permanent Message Header Fields registry.</t>

<section anchor="prefer-push" title="Prefer-Push">
<t><list style="symbols">
  <t>Header field name: Prefer-Push</t>
  <t>Applicable protocol: HTTP</t>
  <t>Status: standard</t>
  <t>Author/Change controller: IETF</t>
  <t>Specification document(s): <xref target="prefer-push"/> of this document</t>
  <t>Related information: for Client Hints</t>
</list></t>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC7540;
&RFC8288;
&I-D.ietf-httpbis-header-structure;
&W3C.CR-preload-20171026;


    </references>

    <references title='Informative References'>

&RFC4287;
<reference anchor="HAL" target="https://tools.ietf.org/html/draft-kelly-json-hal-00">
  <front>
    <title>JSON Hypertext Application Language</title>
    <author initials="M." surname="Kelly" fullname="Mike Kelly">
      <organization></organization>
    </author>
    <date year="2012" month="June" day="07"/>
  </front>
</reference>
<reference anchor="JSON-API" target="https://jsonapi.org/format/">
  <front>
    <title>JSON:API</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t>A server serves a document with a JSON-based media-type. The following example
document might represent a list of articles:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/vnd.example.links+json

{
   "links": [
      { "rel": "item", "href": "/article/1" },
      { "rel": "item", "href": "/article/2" },
      { "rel": "item", "href": "/article/3" },
      { "rel": "item", "href": "/article/4" },
      { "rel": "item", "href": "/article/5" }
   ]
   "total" : 5,
}
]]></artwork></figure>

<t>A “Prefer-Push”-enabled client knows it will want to receive the full
representations of all articles. When the client receives the list of
articles via a “GET” request, it can indicate this preference with
the “Prefer-Push” header:</t>

<figure><artwork><![CDATA[
GET /article HTTP/1.1
Accept: application/vnd.example.links+json
Prefer-Push: item
]]></artwork></figure>

<t>Upon recieving this request, server may immediately generate the request
and response pairs for every “item” link in the collection and initiate
push streams for each.</t>

</section>
<section anchor="changelog" title="Changelog">

<section anchor="changes-since-00" title="Changes since -00">

<t><list style="symbols">
  <t>Added an abstract</t>
  <t>Updated rationale section significantly.</t>
</list></t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

