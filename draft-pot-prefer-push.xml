<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC7540 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7540.xml">
<!ENTITY RFC8288 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml">
<!ENTITY I-D.ietf-httpbis-header-structure SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-httpbis-header-structure.xml">
<!ENTITY W3C.CR-preload-20171026 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.CR-preload-20171026.xml">
<!ENTITY RFC4287 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4287.xml">
]>


<rfc docName="draft-pot-prefer-push-00" category="std">

  <front>
    <title>HTTP-client suggested Push Preference</title>

    <author initials="." surname="Evert Pot">
      <organization></organization>
      <address>
        <email>me@evertpot.com</email>
        <uri>https://evertpot.com/</uri>
      </address>
    </author>

    <date year="2018" month="December" day="02"/>

    
    
    

    <abstract>


<t>TODO</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP/2 <xref target="RFC7540"/> allows a server to push request and response pairs to
HTTP clients. This can save round-trips between server and client and
reduces the total time required for a client to retrieve all requested
resources.</t>

<t>This mechanism is completely controlled by the server, and it is up to
implementors of services to anticipate what resources a client might need
next.</t>

<t>This specification defines a new HTTP header that allows a client to inform a
server of resources they will require next based on a link relation type
<xref target="RFC8288"/>.</t>

</section>
<section anchor="rationale" title="Rationale">

<t>Many HTTP-based services provide some mechanism to embed the HTTP response
bodies of resources into other HTTP resource. A common example of this is when
a resource is structured as a “collection of resources”. Examples of this
include:</t>

<t><list style="symbols">
  <t>The Atom Syndication Format <xref target="RFC4287"/> that encodes <spanx style="verb">ATOM:entry</spanx> XML
elements for each subordinate.</t>
  <t>The <xref target="HAL"></xref> format, which provides an <spanx style="verb">_embedded</spanx> element to embedding bodies
of resources in other resources.</t>
  <t>The <xref target="JSON-API"></xref> format, which provides a <spanx style="verb">included</spanx> property to embed
resources.</t>
</list></t>

<t>Embedding resource responses in other resources has two major peformance
advantages:</t>

<t><list style="numbers">
  <t>It reduces the number of roundtrips. A client can make a single HTTP request
and get many responses.</t>
  <t>Generating a related set of resources can often be implemented on a server
to be less time consuming that generating each response individually.</t>
</list></t>

<t>These mechanism also poses an issue. HTTP clients and intermediaries are not
aware of these embedded resources, because there was never a true HTTP request.</t>

<t>By leveraging HTTP/2 push instead of format-specific embedding mechanisms,
it’s possible for services to push subordinate resources as soon as possible,
generate HTTP responses as a “set” all while still taking advantage of existing
HTTP infrastructure. Another advantage of HTTP/2 push over embedding it that
it allows resources of mixed mediatypes to be pushed.</t>

<t>In many REST apis, sub-ordiniate or embedded resources are identified by their
link relation. By using the link relation, it will be possible for a client
to indicate to a server which links they intent to follow, allowing a server
to only push the resources that the client knows it will need.</t>

</section>
<section anchor="the-header-format" title="The header format">

<t>This format should uses the “List” format from the Structured Headers format
<xref target="I-D.ietf-httpbis-header-structure"/>.</t>

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer-Push: item, author, "https://example.org/custom-rel"
]]></artwork></figure>

</section>
<section anchor="server-pushes" title="Server pushes">

<t>When a server receives the <spanx style="verb">Prefer-Push</spanx> header, it can choose to push the
related resources. It’s up to the discretion of the implementor to decide
which resources to push. A server is also free to ignore push-requests.</t>

</section>
<section anchor="using-with-preload-relationship-types" title="Using with “preload” relationship types">

<t><xref target="W3C.CR-preload-20171026"/> defines a <spanx style="verb">preload</spanx> relationship type. This
relationship type can be used by an origin to inform a client or intermediate
to start fetching a resource, or a proxy to initiate a HTTP/2 push.</t>

<t>A distinct difference between <spanx style="verb">preload</spanx> and <spanx style="verb">Prefer-Push</spanx> is that <spanx style="verb">preload</spanx>
can be used by origin servers to inform clients and intermediates to fetch
and potentially push resources optimistically, but fundamentally <spanx style="verb">Prefer-Push</spanx>
is a completely client-driven mechanism.</t>

<t>As such, these features can co-exist.</t>

</section>
<section anchor="security-considerations" title="Security considerations">

<t>The Prefer-Push mechanism can potentially result in a large number of
resources being pushed. This can result in a Denial-of-Service attack.</t>

<t>A server must set reasonable restrictions around the amount of pushes it
sends. In the case of N-Depth pushes, servers SHOULD also set restrictions
around the depth it supports.</t>

</section>
<section anchor="iana-considerations" title="IANA considerations">

<t>This document defines the <spanx style="verb">Prefer-Push</spanx> HTTP request fields and registers
them in the Permanent Message Header Fields registry.</t>

<section anchor="prefer-push" title="Prefer-Push">
<t><list style="symbols">
  <t>Header field name: Prefer-Push</t>
  <t>Applicable protocol: HTTP</t>
  <t>Status: standard</t>
  <t>Author/Change controller: IETF</t>
  <t>Specification document(s): <xref target="prefer-push"/> of this document</t>
  <t>Related information: for Client Hints</t>
</list></t>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC7540;
&RFC8288;
&I-D.ietf-httpbis-header-structure;
&W3C.CR-preload-20171026;


    </references>

    <references title='Informative References'>

&RFC4287;
<reference anchor="HAL" target="https://tools.ietf.org/html/draft-kelly-json-hal-00">
  <front>
    <title>JSON Hypertext Application Language</title>
    <author initials="M." surname="Kelly" fullname="Mike Kelly">
      <organization></organization>
    </author>
    <date year="2012" month="June" day="07"/>
  </front>
</reference>
<reference anchor="JSON-API" target="https://jsonapi.org/format/">
  <front>
    <title>JSON:API</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t>A server serves a document with a JSON-based media-type. The following example
document might represent a list of articles:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Content-Type: application/vnd.example.links+json

{
   "links": [
      { "rel": "item", "href": "/article/1" },
      { "rel": "item", "href": "/article/2" },
      { "rel": "item", "href": "/article/3" },
      { "rel": "item", "href": "/article/4" },
      { "rel": "item", "href": "/article/5" }
   ]
   "total" : 5,
}
]]></artwork></figure>

<t>A “Prefer-Push”-enabled client knows it will want to receive the full
representations of all articles. When the client receives the list of
articles via a “GET” request, it can indicate this preference with
the “Prefer-Push” header:</t>

<figure><artwork><![CDATA[
GET /article HTTP/1.1
Accept: application/vnd.example.links+json
Prefer-Push: item
]]></artwork></figure>

<t>Upon recievinvg this request, server may immediately generate the request
and response pairs for every “item” link in the collection and initiate
push streams for each.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

