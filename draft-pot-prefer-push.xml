<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC7540 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7540.xml">
<!ENTITY RFC8288 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml">
<!ENTITY RFC7240 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7240.xml">
<!ENTITY I-D.ietf-httpbis-header-structure SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-httpbis-header-structure.xml">
<!ENTITY W3C.CR-preload-20171026 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.CR-preload-20171026.xml">
<!ENTITY RFC4287 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4287.xml">
]>


<rfc docName="draft-pot-prefer-push-00" category="std">

  <front>
    <title>HTTP-client suggested Push Preference</title>

    <author initials="." surname="Evert Pot">
      <organization></organization>
      <address>
        <email>me@evertpot.com</email>
        <uri>https://evertpot.com/</uri>
      </address>
    </author>

    <date year="2018" month="November" day="15"/>

    
    
    

    <abstract>


<t>TODO</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP/2 <xref target="RFC7540"/> allows a server to push request and response pairs to
HTTP clients. This can save round-trips between server and client and
reduces the total time required for a client to retrieve all requested
resources.</t>

<t>This mechanism is completely controlled by the server, and it is up to
implementors of services to anticipate what resources a client might need
next.</t>

<t>This specification defines a new HTTP header that allows a client to inform a
server of resources they will require next based on a link relation type
<xref target="RFC8288"/>.</t>

</section>
<section anchor="rationale" title="Rationale">

<t>Many HTTP-based services provide some mechanism to embed the HTTP response
bodies of resources into other HTTP resource. A common example of this is when
a resource is structured as a “collection of resources”. Examples of this
include:</t>

<t><list style="symbols">
  <t>The Atom Syndication Format <xref target="RFC4287"/> that encodes <spanx style="verb">ATOM:entry</spanx> XML
elements for each subordinate.</t>
  <t>The <xref target="HAL"></xref> format, which provides an <spanx style="verb">_embedded</spanx> element to embedding bodies
of resources in other resources.</t>
  <t>The <xref target="JSON-API"></xref> format, which provides a <spanx style="verb">included</spanx> property to embed
resources.</t>
</list></t>

<t>Embedding resource responses in other resources has two major peformance
advantages:</t>

<t><list style="numbers">
  <t>It reduces the number of roundtrips. A client can make a single HTTP request
and get many responses.</t>
  <t>Generating a set of resources can often be implemented on a server to
be less time consuming that generating each response individually.</t>
</list></t>

<t>These mechanism also pose an issue. HTTP clients and intermediates and caches
are not aware of these embedded resources, because there was never a real HTTP
request.</t>

<t>By leveraging HTTP/2 push instead of format-specific embedding mechanisms,
it’s possible for services to push subordinate resources as soon as possible,
generate HTTP responses as a “set” all while still taking advantage of existing
HTTP infrastructure. Another advantage of HTTP/2 push over embedding it that
it allows resources of mixed mediatypes to be pushed.</t>

<t>In many REST apis, sub-ordiniate or embedded resources are identified by their
link relation. By using the link relation, it will be possible for a client
to indicate to a server which links they intent to follow, allowing a server
to only push the resources that the client knows it will need.</t>

</section>
<section anchor="the-header-format" title="The header format">

<t><spanx style="strong">Note</spanx>: the following subsections contain several proposals. Only one should
stay in this specification, but all suggestions are currently listed for
completeness.</t>

<t>Each subsection contains an example of a <spanx style="verb">Prefer-Push</spanx> header, but also stated
as a new parameter of the <spanx style="verb">Prefer</spanx> header <xref target="RFC7240"/>. In this case also only 1
should stay in this document before duplication.</t>

<section anchor="single-depth-pushes" title="Single-depth pushes">

<t>The simplest version of this only allows single depth push preferences. This
means that the <spanx style="verb">Prefer-Push</spanx> header can only be used for linked resources from
the context resource.</t>

<section anchor="example-using-prefer-push-header" title="Example using Prefer-Push header">

<t>This format should uses the “List” format from the Structured Headers format
<xref target="I-D.ietf-httpbis-header-structure"/>.</t>

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer-Push: item, author, "https://example.org/custom-rel"
]]></artwork></figure>

</section>
<section anchor="example-using-prefer-header" title="Example using Prefer header">

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer: push="item, author, \"https://example.org/custom-rel\""
]]></artwork></figure>

</section>
</section>
<section anchor="n-depth-pushes" title="N-depth pushes">

<t>Hypermedia clients often will need to follow a chain of links, it might
therefore be benefitial to allow clients to specify relations at multiple
depths.</t>

<t>The following example requests for the server to push the resources linked
via the “item” and “icon” relation. For each of the resources linked via
the “item” relationship, it also requests the “author” relationship and
custom link relationship to be pushed.</t>

<section anchor="example-using-prefer-push-header-1" title="Example using Prefer-Push header">

<t>Because the Structered Headers format does not have a way to define lists
of arbitrary depth, a custom format is used. This format is intended to
resemble existing HTTP headers but there’s no direct equivalent.</t>

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer-Push: item(author, "https://example.org/custom-rel"), icon
]]></artwork></figure>

</section>
<section anchor="example-using-prefer-header-1" title="Example using Prefer header">

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer: push="item(author, \"https://example.org/custom-rel\"), icon"
]]></artwork></figure>

</section>
</section>
<section anchor="n-depth-pushes-with-s-expression-syntax" title="N-depth pushes with S-expression syntax">

<t>The following example expresses the same information, but instead of a custom
format it uses <xref target="S-expression"/>.</t>

<section anchor="example-using-prefer-push-header-2" title="Example using Prefer-Push header">

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer-Push: (item(author "https://example.org/custom-rel") icon)
]]></artwork></figure>

</section>
<section anchor="example-using-prefer-header-2" title="Example using Prefer header">

<figure><artwork><![CDATA[
GET /articles HTTP/1.1
Prefer: push="(item(author \"https://example.org/custom-rel\") icon)"
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="server-pushes" title="Server pushes">

<t>When a server receives the <spanx style="verb">Prefer(-Push)</spanx> header, it can choose to push the
related resources.</t>

<t>It’s possible for a resource to be references multiple times via different
link-relationships. The server must de-duplicate these responses.</t>

<t>A server is free to ignore push-requests.</t>

</section>
<section anchor="abnf-syntax" title="ABNF syntax">

<t>TODO when format is picked</t>

</section>
<section anchor="using-with-preload-relationship-types" title="Using with “preload” relationship types">

<t><xref target="W3C.CR-preload-20171026"/> defines a “preload” relationship type. This
relationship type can be used by an origin to inform a client or intermediate
to start fetching a resource, or a proxy to initiate a HTTP/2 push.</t>

<t>Clients interacting with servers or proxies implementing “preload” could
discard <spanx style="verb">Prefer-Push: preload</spanx>, as it would be a no-op, but this is not
recommended as servers and proxies could still take this as a hint that
a Push is desired.</t>

<t>A distinct difference between <spanx style="verb">preload</spanx> and <spanx style="verb">Prefer-Push</spanx> is that <spanx style="verb">preload</spanx>
can be used by origin servers to inform clients and intermediates to fetch
and potentially push resources optimistically, but fundamentally <spanx style="verb">Prefer-Push</spanx>
is a completely client-driven mechanism.</t>

</section>
<section anchor="security-considerations" title="Security considerations">

<t>The Prefer-Push mechanism can potentially result in a large number of
resources being pushed. This can result in a Denial-of-Service attack.</t>

<t>A server must set reasonable restrictions around the amount of pushes it
sends. In the case of N-Depth pushes, servers SHOULD also set restrictions
around the depth it supports.</t>

</section>
<section anchor="iana-considerations" title="IANA considerations">

<t>TODO: Put registry updates where a decision is made on Prefer/Prefer-Push.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC7540;
&RFC8288;
&RFC7240;
&I-D.ietf-httpbis-header-structure;
&W3C.CR-preload-20171026;


    </references>

    <references title='Informative References'>

&RFC4287;
<reference anchor="HAL" target="https://tools.ietf.org/html/draft-kelly-json-hal-00">
  <front>
    <title>JSON Hypertext Application Language</title>
    <author initials="M." surname="Kelly" fullname="Mike Kelly">
      <organization></organization>
    </author>
    <date year="2012" month="June" day="07"/>
  </front>
</reference>
<reference anchor="JSON-API" target="https://jsonapi.org/format/">
  <front>
    <title>JSON:API</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="S-expression" target="https://en.wikipedia.org/wiki/S-expression">
  <front>
    <title>S-expressions</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>




  </back>

<!-- ##markdown-source:
H4sIAPmd8VsAA7VZa2/cuBX9zl9BTD5sEozGj+5uggEK1ImTjdvEDmIvtkC3
qDkSZ8S1JKoiZXsQeH/7nntJShonblygNWJAkcj7vuc+nGWZKJTXS3m4f/Ay
OzjIDn4Q3vgKb2bvLi4+ZnlldOOl6zcb7bwu5MfelfJjp9e6002uZ6KweaNq
XCg6tfZZa/HLn7MWR7P9fZGDw8Z226V0vhCq96XtlkLKDL9SmsYt5Ztr3Xn5
0Xp+pWtlqqWs9V80vQfJRW5r/tR3ZilL71u33Nubft0Tje1q5c21Jtqf3r5+
8cP3+/Hx5eHLl+ntYXh7kh0vjPbrjIitjMtKrQoI7XzX577vmMovf3q9eP2J
9KmsKjIY6cXB/uGPSyFMs77H7vvDly/o8d3R+yWLmsGGpapm/J9o1L+en53K
d9sWcutbL4/atjIwj7GNfK+aTa82mo+PRqKfYN/ZB3Ol5d90VW0DzcFzh9n+
j9n+i8BIdRvtRxt5ayvHmi5st9krfV3tBU9dEaXsN2ebDGKSoyTLlx19PBk0
4M+qNfeVWOLQV/nRBZxnZsFEezh3nulbWNE5aDpax+Hljnlm03Nu9lUGulnc
mCvT6sIo5kL/25teFCLLMqlWcKXKvRAXZ8dn4V1tiqLSQjyRJ43vbAFP83kK
9b1D+flzDJu7O6mqyt44qaTTHcJMeispnmWn/90jE6RqCjy7FnJq2SrTORxh
QjLkjFvIi9I4matGOnWtZWf7psh8Z1onV9rfaN0k4kQsZhoeRachmQbBUoOo
VxXsU2tmbfBNwq4QLF6AYJ0GVSQDCZ0E1ETG2b4DoQVsQKLUOi9VY1wtSS5b
t5X2utrikaxRVSC92jLXINecBTOejvct6WfoTg22FvraNZ8zLKrFWW9y0yIo
5U2pvBzYj7LWZlN62WgI1yD+k1yu1blZp0Qo9No0fKvRN5ItGnITkoHs4JhR
/5CMUoloTgg2Moc6W3ljomVgP0ms5Uo5qAt2SlamucLHKrD3yE7BkUCocXe3
oHD5xN8Uxc4H1WxZqiyQGEzQdvbaFLCdha9GU0M+Xa9wkOzK2qSwEStbGO12
xTWwrbQ42w2H+ctCHpHLakiobxW5ge55Mh/+3ZS6EWo4TK8GICukInPNcvIw
B/wOx9lCvgkEXaIIdMurvgCyiecIYi2PvK3l+bYpko/ecmaHhCHgQ8Kwc1AS
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

-->

</rfc>

